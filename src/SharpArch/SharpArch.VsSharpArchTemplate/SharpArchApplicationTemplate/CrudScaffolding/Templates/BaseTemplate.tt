<#@ assembly name="Inflector.Net.dll" #>

<#+
public abstract class BaseTemplate : Template
{
	public BaseTemplate(string solutionName, EntityScaffoldingDetails entityScaffoldingDetails) {
		this.solutionName = solutionName;
		this.entityScaffoldingDetails = entityScaffoldingDetails;
	}
	
	protected string SolutionName {
		get { return solutionName; }
	}
	
	protected EntityScaffoldingDetails EntityScaffoldingDetails {
		get { return entityScaffoldingDetails; }
	}
	
	protected string AppendNamespaceHierarchyTo(string namespacePath) {
		if (entityScaffoldingDetails.NamespaceHierarchy == null || 
			entityScaffoldingDetails.NamespaceHierarchy.Length == 0)
			return namespacePath;
			
		foreach (string namespaceToAppend in entityScaffoldingDetails.NamespaceHierarchy) {
			namespacePath += "." + namespaceToAppend;
		}
		
		return namespacePath;
	}
	
	private readonly string solutionName;
	private readonly EntityScaffoldingDetails entityScaffoldingDetails;
}
#>
