<#@ import namespace="System.Collections" #>

<#+
public class DomainObjectTemplate : BaseTemplate
{
	public DomainObjectTemplate(string solutionName, string domainObjectName, NameValueCollection properties, string[] namespaceHierarchy) 
		: base(solutionName, domainObjectName, properties, namespaceHierarchy) { }

	protected override void RenderCore()
	{
#>
using SharpArch.Core.PersistenceSupport;
using SharpArch.Core.DomainModel;
using NHibernate.Validator;

namespace <#= AppendNamespaceHierarchyTo(SolutionName + ".Core") #>
{
    public class <#= DomainObjectName #> : Entity
    {
        public <#= DomainObjectName #>() { }

		<#+
		PushIndent("\t\t");

		foreach (string	propertyName in Properties.AllKeys ) {
			WriteLine("public virtual " + Properties[propertyName] + " " + propertyName + " { get; set; }");
		}

		PopIndent();
		#>
    }
}
<#+
	}
}
#>
